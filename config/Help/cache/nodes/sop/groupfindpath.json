{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "groupfindpath", "icon": "SOP/groupfindpath", "tags": "groups", "since": "18.0", "verb_since": "18.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Group Find Path"], "extent": [0, 20]}, {"type": "summary", "indent": 0, "text": ["Constructs groups for paths between elements. "], "extent": [143, 197]}, {"type": "para", "indent": 0, "text": ["Constructs groups for paths between elements. Paths are \nminimized over the number of turns and the distance."], "extent": [197, 308]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [308, 316], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Source geometry"], "extent": [316, 334], "body": [{"type": "para", "indent": 4, "text": ["The geometry on which to find the paths."], "extent": [334, 380]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [380, 392], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group Name"], "extent": [392, 405], "body": [{"type": "para", "indent": 4, "text": ["The name of the group to store the constructed path in, when disabled, no\n    groups will be created."], "extent": [405, 512]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Group"], "extent": [512, 524], "body": [{"type": "para", "indent": 4, "text": ["A group specifying an ordered sequence of elements that will be used to construct\n    one or more paths."], "extent": [524, 634]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [634, 646], "body": [{"type": "para", "indent": 4, "text": ["The type of elements to include in the constructed path."], "extent": [646, 708]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Path"], "extent": [708, 721], "body": [{"type": "para", "indent": 0, "text": ["These options allow modifying the path creation procedure."], "extent": [721, 782]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Path Type"], "extent": [782, 793], "body": [{"type": "para", "indent": 4, "text": ["The method of specifying the constructed path.\n    When ", {"type": "ui", "text": ["Path Type"]}, " is ", {"type": "ui", "text": ["Paths through Each Base Group Element in Order"]}, ", \n    the path will be constructed as a sequence of subpaths \n    connecting contiguous elements in the ", {"type": "ui", "text": ["Base Group"]}, ".\n    When ", {"type": "ui", "text": ["Path Type"]}, " is ", {"type": "ui", "text": ["Loops or Rings Starting from Elements in Base Group"]}, ",\n    the path will construct a number of subpaths using only a starting element to specify the path.\n    When ", {"type": "ui", "text": ["Path Type"]}, " is ", {"type": "ui", "text": ["Paths between Start/End Pairs in Base Group"]}, ", the ", {"type": "ui", "text": ["Base Group"]}, " will be\n    paired, with each pair specifying the start and end element of a new path."], "extent": [793, 1406]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Ending"], "extent": [1406, 1419], "body": [{"type": "para", "indent": 4, "text": ["The type of loop to construct. \n    ", {"type": "ui", "text": ["Stop at End"]}, " will only create the shortest path between elements.\n    ", {"type": "ui", "text": ["Extend to Edge"]}, " will extend the path as far as possible without any sharp turns.\n    ", {"type": "ui", "text": ["Close Path"]}, " will attempt to find a secondary path back to the beginning without\n    intersecting with the original path."], "extent": [1419, 1745]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Avoid Self Intersection"], "extent": [1745, 1770], "body": [{"type": "para", "indent": 4, "text": ["When selected, sub-paths will avoid crossing elements and paths that have already been\n    constructed. Sub-paths are given priority by the order that they are specified in the\n    ", {"type": "ui", "text": ["Base Group"]}, ". If paths are unable to be created, a warning will be shown."], "extent": [1770, 2032]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Path Style"], "extent": [2032, 2049], "body": [{"type": "para", "indent": 4, "text": ["When finding paths between edges, one can use the ", {"type": "ui", "text": ["Edge Path Style"]}, " to allow\n    both rings and loops, allow only loops, or allow only rings."], "extent": [2049, 2198]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [2198, 2218], "body": [{"type": "para", "indent": 0, "text": ["These options allow supplying extra constrains that the path must follow."], "extent": [2218, 2294]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["UV Attribute"], "extent": [2294, 2308], "body": [{"type": "para", "indent": 4, "text": ["Used to restrict a path to a region connected by a UV Attribute."], "extent": [2308, 2378]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision Group"], "extent": [2378, 2395], "body": [{"type": "para", "indent": 4, "text": ["A group of elements to avoid when finding paths."], "extent": [2395, 2449]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision Group Type"], "extent": [2449, 2471], "body": [{"type": "para", "indent": 4, "text": ["The type of element in the ", {"type": "ui", "text": ["Collision Group"]}, ". The ", {"type": "ui", "text": ["Collision Group Type"]}, "\n    does not need to be the same as the ", {"type": "ui", "text": ["Group Type"]}, "."], "extent": [2471, 2609]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contain within Collision Group"], "extent": [2609, 2641], "body": [{"type": "para", "indent": 4, "text": ["Constrains constructed paths within the supplied ", {"type": "ui", "text": ["Collision Group"]}, "."], "extent": [2641, 2716]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Paths along Collision Group Boundary"], "extent": [2716, 2760], "body": [{"type": "para", "indent": 4, "text": ["When enabled, will require both half edges on an edge to be free of collisions\n    while constructing edge loops, and will require entire polygons to be free of collisions\n    while constructing rings and primitive loops."], "extent": [2760, 2988]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2988, 2997], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcombine", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcombine.html"}], "extent": [2997, 3024]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupdelete", "type": "link", "text": "", "fullpath": "/nodes/sop/groupdelete.html"}], "extent": [3024, 3049]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupexpression", "type": "link", "text": "", "fullpath": "/nodes/sop/groupexpression.html"}], "extent": [3049, 3078]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/grouprename", "type": "link", "text": "", "fullpath": "/nodes/sop/grouprename.html"}], "extent": [3078, 3103]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/grouptransfer", "type": "link", "text": "", "fullpath": "/nodes/sop/grouptransfer.html"}], "extent": [3103, 3130]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcopy", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcopy.html"}], "extent": [3130, 3153]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcreate", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcreate.html"}], "extent": [3153, 3178]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupexpand", "type": "link", "text": "", "fullpath": "/nodes/sop/groupexpand.html"}], "extent": [3178, 3203]}], "container": true}], "text": "Related"}], "title": ["Group Find Path"], "summary": ["Constructs groups for paths between elements. "]}