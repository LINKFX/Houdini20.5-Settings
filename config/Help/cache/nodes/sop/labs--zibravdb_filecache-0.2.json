{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::zibravdb_filecache::0.2", "icon": "/labs_icons/zibravdb.svg", "since": "20.5", "version": "0.2", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs ZibraVDB File Cache (Alpha)"], "extent": [125, 162]}, {"type": "summary", "indent": 0, "text": ["Performs compression and caching, or loading and decompression, of a VDB sequence to or from a single ", {"type": "code", "text": [".zibravdb"]}, " file."], "extent": [162, 291]}, {"type": "para", "indent": 0, "text": ["As a part of the ", {"scheme": null, "value": "https://effects.zibra.ai/zibravdbhoudini", "type": "link", "text": ["ZibraVDB for Houdini (Alpha)"], "exists": true}, " plugin, this node combines the functionalities of the ", {"scheme": "Node", "value": "/nodes/sop/labs--rop_zibravdb_compress-0.2", "type": "link", "text": ["Labs ZibraVDB Compress (Alpha) SOP"], "fullpath": "/nodes/sop/labs--rop_zibravdb_compress-0.2.html"}, " and the ", {"scheme": "Node", "value": "/nodes/sop/labs--zibravdb_decompress-0.2", "type": "link", "text": ["Labs ZibraVDB Decompress (Alpha) SOP"], "fullpath": "/nodes/sop/labs--zibravdb_decompress-0.2.html"}, ". It can compress/decompress both animated VDB sequences and static VDB geometries."], "extent": [291, 682]}, {"type": "para", "indent": 0, "text": ["Similar to the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, ", this node operates in two modes: "], "extent": [682, 768]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Caching mode: Compresses a VDB sequence and caches it to disk as a single  ", {"type": "code", "text": [".zibravdb"]}, " file."], "extent": [768, 863]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Loading mode: Loads a single ", {"type": "code", "text": [".zibravdb"]}, " file from disk and decompresses it as a VDB sequence."], "extent": [863, 961]}], "container": true}, {"type": "para", "indent": 0, "text": ["The compression often achieves up to 97\u201399% reduction in VDB file size with minimal quality loss. The compression rate is adjustable for each VDB field, providing independent control over the quality and memory footprint of ", {"type": "code", "text": ["density"]}, ", ", {"type": "code", "text": ["temperature"]}, ", ", {"type": "code", "text": ["flame"]}, ", and other standard or custom fields. Up to 8 float fields can be compressed simultaneously."], "extent": [961, 1313]}, {"type": "para", "indent": 0, "text": ["When reading back from disk, the entire sequence is loaded at once, with frames decompressed on demand using a frame index parameter. This significantly speeds up playback for high-resolution VDBs by eliminating the need to load one frame from disk at a time. Additionally, the total size of the data to be loaded is much smaller. The decompression occurs on the GPU and is extremely fast."], "extent": [1313, 1704]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1704, 1709], "body": [{"type": "para", "indent": 4, "text": ["You may also compress SDF VDBs indirectly. Convert SDF VDBs to Fog VDBs before compression and back to SDF VDBs after decompression using the ", {"scheme": "Node", "value": "/nodes//sop/convertvdb", "type": "link", "text": ["Convert VDB SOP"], "fullpath": "/nodes//sop/convertvdb.html"}, "."], "extent": [1709, 1896]}], "container": true}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1896, 1902], "body": [{"type": "para", "indent": 4, "text": ["Vector VDBs currently cannot be compressed. This feature will be supported in the future. In the meantime, you can split vector VDBs to float VDBs using the ", {"scheme": "Node", "value": "/nodes//sop/vdbvectorsplit", "type": "link", "text": ["VDB Vector Split SOP"], "fullpath": "/nodes//sop/vdbvectorsplit.html"}, " before compression. After decompression, merge the float VDBs back to vector VDBs using the ", {"scheme": "Node", "value": "/nodes//sop/vdbvectormerge", "type": "link", "text": ["VDB Vector from Scalar SOP"], "fullpath": "/nodes//sop/vdbvectormerge.html"}, ". Please note that compressing vectors is not exactly the same as compressing vector components independently, so this current workaround may yield unexpected results."], "extent": [1902, 2425]}], "container": true}], "container": true, "role": "item_group"}, {"type": "platform_group", "body": [{"ext": null, "type": "platform", "indent": 0, "text": ["Windows"], "role": "item", "extent": [2425, 2443], "body": [{"type": "para", "indent": 4, "text": ["ZibraVDB for Houdini (Alpha) is currently only supported on Windows."], "extent": [2443, 2518]}], "container": true}], "container": true, "role": "item_group"}, {"level": 2, "id": "gettingready", "container": true, "type": "h", "indent": 0, "text": ["Getting Ready"], "extent": [1671, 1706], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Acquire License Key"], "extent": [1706, 1735], "body": [{"type": "para", "indent": 0, "text": ["For the plugin to function, Houdini must be able to locate a valid ZibraVDB license on your machine."], "extent": [1735, 1837]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Please read the ", {"scheme": null, "value": "https://effects.zibra.ai/vdb-terms-of-services-trial", "type": "link", "text": ["ZibraVDB Terms of Service"], "exists": true}, "."], "extent": [1837, 1937]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Visit ", {"scheme": null, "value": "https://effects.zibra.ai/zibravdbhoudini", "type": "link", "text": ["ZibraVDB for Houdini (Alpha)"], "exists": true}, " to request a trial license."], "extent": [1937, 2045]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["After receiving your license key, create a text file in a directory of your choosing and name it ", {"type": "code", "text": ["zibravdb_license_key.txt"]}, ". Paste your license key into this text file and save it."], "extent": [2045, 2228]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Set up a Houdini ", {"scheme": null, "value": "https://www.sidefx.com/docs/houdini/basics/config_env.html#setting-environment-variables", "type": "link", "text": ["environment variable"], "exists": true}, " named ", {"type": "code", "text": ["ZIBRAVDB_LICENSE_KEY"]}, " and assign it the path to your license key file."], "extent": [2228, 2438]}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2438, 2443], "body": [{"type": "para", "indent": 4, "text": ["For example, if you saved the license key file to ", {"type": "code", "text": ["C:/Users/.../Documents/houdini20.5/zibra/"]}, ", then you may add the following line to your ", {"type": "code", "text": ["houdini.env"]}, " file:"], "extent": [2443, 2607]}, {"type": "para", "indent": 4, "text": [{"type": "code", "text": ["ZIBRAVDB_LICENSE_KEY = C:/Users/.../Documents/houdini20.5/zibra/zibravdb_license_key.txt"]}], "extent": [2607, 2703]}, {"type": "para", "indent": 4, "text": ["You may also use the ", {"scheme": null, "value": "https://www.sidefx.com/docs/houdini/ref/plugins.html", "type": "link", "text": ["package mechanism"], "exists": true}, " to set environment variables."], "extent": [2703, 2832]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Download ZibraVDB Core Library"], "extent": [2832, 2871], "body": [{"type": "para", "indent": 0, "text": ["The plugin also requires the ZibraVDB core library on the back end. (This library and its source code are proprietary to Zibra AI and, therefore, are not included directly in the open-source SideFX Labs package.) The plugin has a built-in method to download this core library, which only needs to be done once (per working environment)."], "extent": [2871, 3209]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Press the ", {"type": "ui", "text": ["Download Library"]}, " button on any ZibraVDB node."], "extent": [3209, 3271]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the pop-up window, confirm that you accept the ", {"scheme": null, "value": "https://effects.zibra.ai/vdb-terms-of-services-trial", "type": "link", "text": ["ZibraVDB Terms of Service"], "exists": true}, " to proceed."], "extent": [3271, 3416]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["The download will occur in the background and will typically complete within a few seconds."], "extent": [3416, 3510]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["A second pop-up window will appear once the download is finished. The core library, ", {"type": "code", "text": ["ZibraVDBHoudiniBridge.dll"]}, ", will be saved to ", {"type": "code", "text": ["$HOUDINI_USER_PREF_DIR/zibra/X_Y/"]}, ". Alternatively, if the ", {"scheme": null, "value": "https://www.sidefx.com/docs/houdini/basics/config.html#path", "type": "link", "text": ["site-specific directory"], "exists": true}, " ", {"type": "code", "text": ["$HSITE"]}, " is set, it will be saved to ", {"type": "code", "text": ["$HSITE/zibra/X_Y/"]}, "."], "extent": [3510, 3847]}], "container": true}]}]}, {"level": 2, "id": "aboutzibravdb", "container": true, "type": "h", "indent": 0, "text": ["About ZibraVDB"], "extent": [3847, 3884], "body": [{"type": "para", "indent": 0, "text": [{"scheme": null, "value": "https://effects.zibra.ai/zibravdb-virtual-production", "type": "link", "text": ["ZibraVDB"], "exists": true}, " is a cutting-edge ", {"scheme": null, "value": "https://youtu.be/c8FQ_jidNH0?si=jKj1Rxj30FXA0err", "type": "link", "text": ["VDB compression and real-time rendering technology"], "exists": true}, " developed by ", {"scheme": null, "value": "https://effects.zibra.ai/", "type": "link", "text": ["Zibra AI"], "exists": true}, ". The compression can currently achieve up to 97\u201399% reduction in VDB file size with minimal quality loss. The proprietary ", {"type": "code", "text": [".zibravdb"]}, " file format captures an entire VDB sequence in a single file, which can be loaded into applications such as Houdini or Unreal Engine, decompressed on the GPU in real time, and played back in the viewport at speeds significantly faster than native solutions."], "extent": [3884, 4512]}, {"type": "para", "indent": 0, "text": ["For artists, this provides a memory-efficient, high-performance volumetric data pipeline that seamlessly integrates into existing workflows."], "extent": [4512, 4654]}, {"type": "para", "indent": 0, "text": ["It significantly reduces storage costs, improves volumetric data I/O speeds, and ultimately makes it easier and more practical to share working projects and distribute final products containing high-fidelity volumetric effects."], "extent": [4654, 4883]}, {"type": "para", "indent": 0, "text": [{"scheme": null, "value": "https://github.com/ZibraAI/ZibraVDBForHoudini", "type": "link", "text": ["ZibraVDB for Houdini"], "exists": true}, ", contributed by Zibra AI, is a SideFX Labs plugin that brings ZibraVDB\u2019s compression, decompression, and accelerated playback capabilities into Houdini\u2019s ecosystem."], "extent": [4883, 5118]}, {"type": "para", "indent": 0, "text": ["Additionally, the compressed ", {"type": "code", "text": [".zibravdb"]}, " files can be used with ", {"scheme": null, "value": "https://www.fab.com/listings/23aef313-3c6a-40ea-810d-35de2ea5bca2", "type": "link", "text": ["ZibraVDB for UE"], "exists": true}, ". This empowers artists to bring stunning volumetric effects created in Houdini to Unreal Engine and render them efficiently as full 3D ray-marched volumes in real time."], "extent": [5118, 5437]}]}, {"level": 2, "id": "feedback", "container": true, "type": "h", "indent": 0, "text": ["Feedback and Support"], "extent": [5437, 5475], "body": [{"type": "para", "indent": 0, "text": ["If you have any questions, issues, or feedback, please reach out to ", {"scheme": null, "value": "https://zibra.notion.site/Report-a-Bug-104bc784cfb38013aa9eebcefd86c00a", "type": "link", "text": ["ZibraVDB Support"], "exists": true}, ". "], "extent": [5475, 5638]}, {"type": "para", "indent": 0, "text": ["You can also contact ", {"scheme": null, "value": "https://www.sidefx.com/support-programs/", "type": "link", "text": ["SideFX Support"], "exists": true}, " and mention that the issue should be directed to the SideFX Labs team."], "extent": [5638, 5790]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2707, 2719], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Load from Disk"], "extent": [2719, 2740], "body": [{"type": "para", "indent": 8, "text": ["If on, loads and decompresses the ", {"type": "code", "text": [".zibravdb"]}, " file specified in ", {"type": "ui", "text": ["File"]}, " instead of cooking the input geometry."], "extent": [2766, 2887]}], "container": true, "attrs": {"id": "loadfromdisk"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Reload Cache"], "extent": [1688, 1706], "body": [{"type": "para", "indent": 8, "text": ["Forces a reload of the ", {"type": "code", "text": [".zibravdb"]}, " file from disk and refreshes the decompressed frame."], "extent": [1727, 1824]}], "container": true, "attrs": {"id": "refresh"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File"], "extent": [2955, 2965], "body": [{"type": "para", "indent": 8, "text": ["The file path which the compressed VDB geometry will be saved to or loaded from. The file extension must be ", {"type": "code", "text": [".zibravdb"]}, ". During caching, any missing directories in the path will be automatically created."], "extent": [2983, 3196]}], "container": true, "attrs": {"id": "file"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": "caching", "container": true, "type": "h", "indent": 4, "text": ["Caching"], "extent": [3196, 3224], "body": [{"level": 3, "type": "sep", "indent": 4, "text": [" Cache "], "extent": [3224, 3243]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Render to Disk"], "extent": [5802, 5823], "body": [{"type": "para", "indent": 8, "text": ["Compresses the VDB geometry and saves it to disk."], "extent": [5844, 5903]}], "container": true, "attrs": {"id": "execute"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Background Render"], "extent": [5903, 5926], "body": [{"type": "para", "indent": 8, "text": ["In a separate background process, compresses the VDB geometry and saves it to disk. This allows you to continue working in the current Houdini session."], "extent": [5957, 6118]}], "container": true, "attrs": {"id": "executebackground"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Sequence "], "extent": [3386, 3407]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Valid Frame Range"], "extent": [6281, 6304], "body": [{"type": "para", "indent": 8, "text": ["Specifies whether to compress and render a single frame or a frame sequence of VDB geometry."], "extent": [6324, 6430]}], "container": true, "attrs": {"id": "trange"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Start/End/Inc"], "extent": [6430, 6449], "body": [{"type": "para", "indent": 8, "text": ["The start frame (inclusive), end frame (inclusive) and frame increment, when ", {"type": "ui", "text": ["Valid Frame Range"]}, " is ", {"type": "q", "text": ["Render Frame Range"]}, " or ", {"type": "q", "text": ["Render Frame Range Only (Strict)"]}, "."], "extent": [6464, 6639]}], "container": true, "attrs": {"id": "f"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "savefilters", "container": true, "type": "h", "indent": 4, "text": ["Save Filters"], "extent": [3530, 3567], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Delete Attributes"], "extent": [3567, 3591], "body": [{"type": "para", "indent": 8, "text": ["The list of attributes to delete before compression and caching. Separate multiple attributes with spaces. This list applies to all attribute classes."], "extent": [3621, 3785]}], "container": true, "attrs": {"id": "deleteattributes"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Delete Groups"], "extent": [3785, 3804], "body": [{"type": "para", "indent": 8, "text": ["The list of groups to delete before compression and caching. Separate multiple groups with spaces. This list applies to all group types."], "extent": [3830, 3980]}], "container": true, "attrs": {"id": "deletegroups"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Number of Casts"], "extent": [3980, 4001], "body": [{"type": "para", "indent": 8, "text": ["The number of attribute casts to perform before compression and caching. Each combination of attribute class and precision requires a separate multiparm entry."], "extent": [4023, 4196]}], "container": true, "attrs": {"id": "numcasts"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Class"], "extent": [4196, 4207], "body": [{"type": "para", "indent": 8, "text": ["The class of attributes to cast to the specified precision."], "extent": [4227, 4300]}], "container": true, "attrs": {"id": "class#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attributes"], "extent": [4300, 4316], "body": [{"type": "para", "indent": 8, "text": ["The list of attributes to cast to the specified precision. Separate multiple attributes with spaces."], "extent": [4338, 4452]}], "container": true, "attrs": {"id": "attribs#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Precision"], "extent": [4452, 4467], "body": [{"type": "para", "indent": 8, "text": ["The target precision for the attributes."], "extent": [4491, 4545]}], "container": true, "attrs": {"id": "precision#"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "compressionsettings", "container": true, "type": "h", "indent": 4, "text": ["Compression Settings"], "extent": [4545, 4598], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Quality"], "extent": [7089, 7102], "body": [{"type": "para", "indent": 8, "text": ["The output quality of the compressed VDB geometry. Higher values result in fewer artifacts but larger file sizes. The file size increases exponentially as this value increases."], "extent": [7123, 7309]}], "container": true, "attrs": {"id": "quality"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use Per Channel Settings"], "extent": [7309, 7339], "body": [{"type": "para", "indent": 8, "text": ["If on, you can override the output quality of individual channels (i.e. fields), such as ", {"type": "code", "text": ["density"]}, ", ", {"type": "code", "text": ["temperature"]}, ", ", {"type": "code", "text": ["flame"]}, ", etc. Any channel not specified below will still use the value of ", {"type": "ui", "text": ["Quality"]}, "."], "extent": [7369, 7580]}], "container": true, "attrs": {"id": "useperchsettings"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Number of Channels"], "extent": [7580, 7604], "body": [{"type": "para", "indent": 8, "text": ["The number of channels (i.e. fields) to override."], "extent": [7632, 7691]}], "container": true, "attrs": {"id": "perch_settings"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Channel Name"], "extent": [7691, 7709], "body": [{"type": "para", "indent": 8, "text": ["The name of the channel (i.e. field) to override."], "extent": [7733, 7792]}], "container": true, "attrs": {"id": "perchname#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Channel Quality"], "extent": [7792, 7813], "body": [{"type": "para", "indent": 8, "text": ["The output quality of the compressed VDB geometry for the specified channel (i.e. field). This overrides the value of ", {"type": "ui", "text": ["Quality"]}, " for this particular channel."], "extent": [7840, 8008]}], "container": true, "attrs": {"id": "perchquality#"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "advanced", "container": true, "type": "h", "indent": 4, "text": ["Advanced"], "extent": [4958, 4988], "body": [{"level": 3, "type": "sep", "indent": 4, "text": [" Save "], "extent": [4988, 5006]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Render with Take"], "extent": [6639, 6661], "body": [{"type": "para", "indent": 8, "text": ["Specifies which ", {"scheme": null, "value": "/basics/takes", "type": "link", "text": ["take"], "fullpath": "/basics/takes.html"}, " to render with."], "extent": [6679, 6741]}], "container": true, "attrs": {"id": "take"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Scripts "], "extent": [5066, 5086]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Pre-Render Script"], "extent": [8008, 8031], "body": [{"type": "para", "indent": 8, "text": ["The script to run before any rendering."], "extent": [8054, 8103]}], "container": true, "attrs": {"id": "prerender"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pre-Frame Script"], "extent": [8103, 8125], "body": [{"type": "para", "indent": 8, "text": ["The script to run before each frame."], "extent": [8147, 8193]}], "container": true, "attrs": {"id": "preframe"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post-Frame Script"], "extent": [8193, 8216], "body": [{"type": "para", "indent": 8, "text": ["The script to run after each frame."], "extent": [8239, 8284]}], "container": true, "attrs": {"id": "postframe"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post-Render Script"], "extent": [8284, 8308], "body": [{"type": "para", "indent": 8, "text": ["The script to run after all rendering."], "extent": [8332, 8380]}], "container": true, "attrs": {"id": "postrender"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Download Library"], "extent": [8380, 8402], "body": [{"type": "para", "indent": 8, "text": ["Downloads the core library for all ZibraVDB nodes. You only need to press this once (per working environment)."], "extent": [8431, 8555]}], "container": true, "attrs": {"id": "downloadlibrary"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [5414, 5424], "body": [{"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [5424, 5434], "body": [{"type": "para", "indent": 8, "text": ["When viewing in Houdini\u2019s Help Browser, please copy the example file\u2019s URL to a regular browser to proceed with the download."], "extent": [5434, 5569]}], "container": true}], "container": true, "role": "item_group"}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "https://github.com/sideeffects/SideFXLabsExamples/blob/main/examples/zibravdb/zibravdb.0.2.hip", "type": "link", "text": ["Example File"], "exists": true}], "extent": [5569, 5687]}], "container": true}], "text": "Examples"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5687, 5696], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/out/labs--zibravdb_compress-0.2", "type": "link", "text": "", "fullpath": "/nodes/out/labs--zibravdb_compress-0.2.html"}], "extent": [5696, 5742]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/labs--rop_zibravdb_compress-0.2", "type": "link", "text": "", "fullpath": "/nodes/sop/labs--rop_zibravdb_compress-0.2.html"}], "extent": [5742, 5791]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/labs--zibravdb_decompress-0.2", "type": "link", "text": "", "fullpath": "/nodes/sop/labs--zibravdb_decompress-0.2.html"}], "extent": [5791, 5837]}], "container": true}], "text": "Related"}], "title": ["Labs ZibraVDB File Cache (Alpha)"], "summary": ["Performs compression and caching, or loading and decompression, of a VDB sequence to or from a single ", {"type": "code", "text": [".zibravdb"]}, " file."], "included": ["/nodes/out/labs--zibravdb_compress-0.2", "/nodes/sop/labs--rop_zibravdb_compress-0.2", "/nodes/sop/labs--zibravdb_decompress-0.2"]}