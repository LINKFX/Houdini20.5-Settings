{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "unpack", "icon": "SOP/unpack", "since": "13.0", "verb_since": "16.5", "tags": "unpack, model", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Unpack"], "extent": [116, 127]}, {"type": "summary", "indent": 0, "text": ["Unpacks packed primitives."], "extent": [127, 162]}, {"type": "para", "indent": 0, "text": ["This SOP takes packed primitives as input and unpacks them so they can be modified by Houdini."], "extent": [162, 258]}, {"type": "para", "indent": 0, "text": ["Packed primitives have an opaque representation and cannot be modified by SOPs, with the exception of simple transforms. Some packed primitives (Alembic) can represent deforming geometry. However, to allow SOPs to apply deformations, the packed primitives need to be unpacked."], "extent": [258, 536]}, {"type": "para", "indent": 0, "text": ["This SOP does not pass through non-packed primitives, unless they are excluded from the group parameter."], "extent": [536, 642]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [642, 654], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [654, 662], "body": [{"type": "para", "indent": 4, "text": ["Subset of input geometry to unpack."], "extent": [662, 703]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Iterations"], "extent": [703, 715], "body": [{"type": "para", "indent": 4, "text": ["When turned on, specifies the number of levels of packed primitives to unpack."], "extent": [735, 819]}], "container": true, "attrs": {"id": "iterations"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detail Attributes"], "extent": [819, 838], "body": [{"type": "para", "indent": 8, "text": ["Specifies how to promote unpacked detail attributes."], "extent": [838, 900]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Promote to Primitive if Different"], "extent": [900, 939], "body": [{"type": "para", "indent": 12, "text": ["Unpacked detail attributes are promoted to primitive attributes if packed primitives create different values for the attribute."], "extent": [939, 1080]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Promote to Primitive Attributes"], "extent": [1080, 1117], "body": [{"type": "para", "indent": 16, "text": ["Unpacked detail attributes are promoted to primitive attributes."], "extent": [1117, 1199]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Promote to Point Attributes"], "extent": [1199, 1232], "body": [{"type": "para", "indent": 16, "text": ["Unpacked detail attributes are promoted to point attributes."], "extent": [1232, 1310]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Promote to Vertex Attributes"], "extent": [1310, 1344], "body": [{"type": "para", "indent": 16, "text": ["Unpacked detail attributes are promoted to vertex attributes."], "extent": [1344, 1423]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Attributes"], "extent": [1423, 1444], "body": [{"type": "para", "indent": 8, "text": ["A list of attributes to transfer to the unpacked geometry. \n        Computed point velocities are transferred if both ", {"type": "code", "text": ["v"]}, " and ", {"type": "code", "text": ["w"]}, " point attributes exist and are specified."], "extent": [1444, 1625]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Groups"], "extent": [1625, 1642], "body": [{"type": "para", "indent": 8, "text": ["A list of groups to transfer to the unpacked geometry."], "extent": [1642, 1706]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Style Sheets"], "extent": [1706, 1726], "body": [{"type": "para", "indent": 8, "text": ["When turned on, causes material style sheet evaluation during the unpack, with the\n        resulting style information being attached to the unpacked primitives\n        as the ", {"type": "code", "text": ["material_stylesheet"]}, " attribute. The output from a render\n        should not be affected by the unpacking of style sheet information.\n        Unpacked style sheet information is much less efficient for\n        rendering than specifying styles at the scene or object levels.\n        However, unpacked style sheets are much easier to read and understand, and\n        are a useful tool for testing and validating the results generated from \n        complex style sheets. See\n        ", {"scheme": null, "value": "/shade/stylesheets", "type": "link", "text": ["Style Sheets"], "fullpath": "/shade/stylesheets.html"}, " for more information on creating\n        and using material style sheets."], "extent": [1726, 2499]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scene Style Sheet"], "extent": [2499, 2518], "body": [{"type": "para", "indent": 8, "text": ["This is available when ", {"type": "ui", "text": ["Apply Style Sheets"]}, " is turned on. Equivalent to the style sheet passed to mantra with the ", {"type": "code", "text": ["-S"]}, " argument.\n        Targets in this style sheet must target the object that contains this\n        SOP, and specify primitives as sub-targets. To reference a style sheet\n        file on disk, you can set this parameter to contain an ", {"type": "code", "text": ["importFiles"]}, "\n        specification in the style sheet such as\n        ", {"type": "code", "text": ["{ \"importFiles\" : [ \"mss/main_style.json\" ] }"]}, "."], "extent": [2518, 2998]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Object Style Sheet"], "extent": [2998, 3018], "body": [{"type": "para", "indent": 8, "text": ["This is available when ", {"type": "ui", "text": ["Apply Style Sheets"]}, " is turned on. Equivalent to the Style Sheet parameter on the Object. Targets in this\n        style sheet refer directly to the primitives input to this SOP."], "extent": [3018, 3230]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Transform"], "extent": [3230, 3247], "body": [{"type": "para", "indent": 4, "text": ["When turned on, the packed geometry is transformed by the primitive transform\n    and point position when unpacked. When turned off, extracts the raw geometry independent of the transform or point position."], "extent": [3268, 3480]}], "container": true, "attrs": {"id": "dotransform"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert Polygon Soup Primitives to Polygons"], "extent": [3480, 3525], "body": [{"type": "para", "indent": 4, "text": ["When turned on, any polygon soup primitives resulting from unpacking are converted to polygon primitives."], "extent": [3550, 3661]}], "container": true, "attrs": {"id": "convertpolysoup"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3661, 3670], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": "", "fullpath": "/nodes/sop/file.html"}], "extent": [3670, 3692]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/alembic", "type": "link", "text": "", "fullpath": "/nodes/sop/alembic.html"}], "extent": [3692, 3717]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/pack", "type": "link", "text": "", "fullpath": "/nodes/sop/pack.html"}], "extent": [3717, 3739]}], "container": true}], "text": "Related"}], "title": ["Unpack"], "summary": ["Unpacks packed primitives."]}