{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "groupexpression", "icon": "SOP/groupexpression", "tags": "groups, vex, tech", "since": "16.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Group Expression"], "extent": [0, 21]}, {"type": "summary", "indent": 0, "text": ["Runs VEX expressions to modify group membership."], "extent": [141, 197]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [197, 212], "body": [{"type": "para", "indent": 0, "text": ["This node ", {"type": "em", "text": ["runs the expression on every point/primitive/vertex"]}, "\n(depending on the ", {"type": "ui", "text": ["Class"]}, " parameter) in the input geometry.\nEach expression will be assigned to the specified group.  To get the group\u2019s\ncurrent value, use the ", {"type": "code", "text": ["@group_"]}, " syntax.\nIt can access information from other geometry using attributes and VEX functions."], "extent": [212, 540]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Unlike Wrangle nodes, you do not have to write a complete VEX statement, only a VEX expression.  Each expression is wrapped with an assignment to the given group and a semicolon.  If you need to write a more complicated multi-line function, use the Attribute Wrangle with ", {"type": "code", "text": ["@group_"]}], "extent": [540, 825]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The generated VEX snippet can be viewed by updating the generated code tab."], "extent": [825, 904]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Press ", {"keys": ["MMB"], "type": "keys", "text": null}, " on the node to see any error output from the snippet."], "extent": [904, 975]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can use the VEX function ", {"type": "code", "text": ["ch"]}, " to evaluate parameters.\n  The path is relative to this node (", {"type": "code", "text": ["ch(\"parm\")"]}, " will evaluate the parameter ", {"type": "code", "text": ["parm"]}, " on this node). This evaluation will be done at the current time."], "extent": [975, 1186]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Unlike the ", {"scheme": "Node", "value": "/nodes/sop/attribcreate", "type": "link", "text": ["Attrib Create SOP"], "fullpath": "/nodes/sop/attribcreate.html"}, ", this does not use local variables.\n  Further, all backtick expressions and ", {"type": "code", "text": ["$F"]}, " variables will be evaluated at frame 1,\n  not the current time.\n  Use ", {"type": "code", "text": ["@Frame"]}, ", ", {"type": "code", "text": ["@Time"]}, ", or ", {"type": "code", "text": ["@TimeInc"]}, " instead."], "extent": [1186, 1435]}], "container": true}, {"type": "para", "indent": 0, "text": ["The ", {"type": "ui", "text": ["VEX snippet"]}, " parameter lets you enter a snippet of ", {"scheme": null, "value": "/vex/", "type": "link", "text": ["VEX code"], "fullpath": "/vex/index.html"}, " to run on the input geometry.\nSee ", {"scheme": null, "value": "/vex/snippets", "type": "link", "text": ["VEX snippets"], "fullpath": "/vex/snippets.html"}, " for basic information on the syntax available in the snippet parameter.\nSee ", {"scheme": null, "value": "/vex/", "type": "link", "text": ["the VEX chapter"], "fullpath": "/vex/index.html"}, " for general information on the VEX language."], "extent": [16, 299]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1461, 1473], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["VEXpressions"], "extent": [1473, 1494], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [1494, 1507], "body": [{"type": "para", "indent": 4, "text": ["What type of groups to edit.  All group expressions are run\n    in a single pass so must have the same group type."], "extent": [1507, 1628]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group VEXpressions"], "extent": [1628, 1648], "body": [{"type": "para", "indent": 4, "text": ["Number of vexpressions to apply."], "extent": [1648, 1686]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Name"], "extent": [1686, 1698], "body": [{"type": "para", "indent": 4, "text": ["Name of group to generate."], "extent": [1698, 1730]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["VEXpression"], "extent": [1730, 1743], "body": [{"type": "para", "indent": 4, "text": ["A single expression in VEX, with no assignment or semi-colon."], "extent": [1743, 1810]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Merge Op"], "extent": [1810, 1820], "body": [{"type": "para", "indent": 4, "text": ["How to merge the expression with any existing group of the same name."], "extent": [1820, 1895]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bindings"], "extent": [1895, 1910], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Evaluation Node Path"], "extent": [1910, 1933], "body": [{"type": "para", "indent": 4, "text": ["VEX functions like ", {"type": "code", "text": ["ch()"]}, " usually evaluate with respect to this node.\n    Enter a node path here to override where the path search starts from.\n    This is useful for embedding in a digital asset, where you want searches\n    to start from the asset root."], "extent": [1933, 2193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute To Match"], "extent": [2193, 2213], "body": [{"type": "para", "indent": 4, "text": ["Which attribute to use for matching.  This attribute must be\n    present on both inputs for matching to be done.  Otherwise matching\n    is done by element number (e.g., point number when running over points).\n    The attribute should either be an integer or string attribute.\n    This controls how the ", {"type": "code", "text": ["opinput#_"]}, " virtual bindings connect.\n    You can use ", {"type": "code", "text": ["v@opinput1_Cd"]}, ", for example, to read the second input\u2019s\n    ", {"type": "code", "text": ["v@Cd"]}, " attribute."], "extent": [2213, 2654]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Generated Code"], "extent": [2654, 2675], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Update Code"], "extent": [2675, 2689], "body": [{"type": "para", "indent": 4, "text": ["Updates the generated code parameter with the current state\n    of the set of snippets."], "extent": [2689, 2782]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Generated Code"], "extent": [2782, 2798], "body": [{"type": "para", "indent": 4, "text": ["The equivalent code for an ", {"scheme": "Node", "value": "/nodes/sop/attribwrangle", "type": "link", "text": ["Attribute Wrangle SOP"], "fullpath": "/nodes/sop/attribwrangle.html"}, " to perform the\n    functions of the expressions.  This is useful if a simple expression becomes complicated and you want to upgrade it to a full wrangle SOP. Changing this does not affect the behavior of the node."], "extent": [2798, 3091]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3091, 3100], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribvop", "type": "link", "text": "", "fullpath": "/nodes/sop/attribvop.html"}], "extent": [3100, 3124]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribwrangle", "type": "link", "text": "", "fullpath": "/nodes/sop/attribwrangle.html"}], "extent": [3124, 3151]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcreate", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcreate.html"}], "extent": [3151, 3176]}], "container": true}], "text": "Related"}], "title": ["Group Expression"], "summary": ["Runs VEX expressions to modify group membership."], "included": ["/nodes/sop/wrangle_syntax"]}