{"type": "root", "attrs": {}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["New Digital Asset dialog"], "extent": [0, 29]}, {"type": "para", "indent": 0, "text": ["This dialog appears when you right-click an subnetwork in the network editor and choose ", {"type": "ui", "text": ["Digital Assets \u25b8 Create New"]}, ", or when you right-click an existing asset and choose ", {"type": "ui", "text": ["Digital Assets \u25b8 Save As"]}, " to create a copy."], "extent": [29, 252]}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "/assets/create", "type": "link", "text": ["how to create a new digital asset"], "fullpath": "/assets/create.html"}, " for more information."], "extent": [252, 331]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Name Construction"], "extent": [331, 355], "body": [{"type": "para", "indent": 0, "text": ["These options combine together to build the ", {"type": "em", "text": ["internal name"]}, " of the new asset."], "extent": [355, 435]}, {"type": "para", "indent": 0, "text": ["The internal name is how Houdini references the asset, ", {"type": "strong", "text": ["not"]}, " the human-readable label that shows up in the tab menu. The asset\u2019s internal name should be unique: if two nodes have an identical internal name, only one can be created by the user through the tab menu. The ", {"scheme": null, "value": "/assets/namespaces", "type": "link", "text": ["namespacing and versioning"], "fullpath": "/assets/namespaces.html"}, " features help you prevent accidental overlap of internal names."], "extent": [435, 817]}, {"type": "para", "indent": 0, "text": ["The most common way you\u2019ll interact with the internal name of a node is when scripting."], "extent": [817, 906]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [906, 911], "body": [{"type": "para", "indent": 4, "text": ["We highly recommend that an asset\u2019s internal name and Label match up (for example, ", {"type": "code", "text": ["threelightrig"]}, " and ", {"type": "code", "text": ["Three Light Rig"]}, "), to avoid confusion."], "extent": [911, 1059]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Type Name"], "extent": [1059, 1070], "body": [{"type": "para", "indent": 4, "text": ["This is the basic ", {"type": "q", "text": ["name"]}, " part of the internal name of the asset.  For example, ", {"type": "code", "text": ["threelightrig"]}, "."], "extent": [1089, 1190]}, {"type": "para", "indent": 4, "text": ["This string must start with a letter or underscore, and can contain only letters, numbers, and underscores. For example, ", {"type": "code", "text": ["threelightrig"]}, "."], "extent": [1190, 1333]}, {"type": "para", "indent": 4, "text": ["You can change the label later, but you ", {"type": "em", "text": ["can\u2019t change the internal name"]}, " without recreating the asset."], "extent": [1333, 1441]}], "container": true, "attrs": {"id": "typename"}}, {"type": "dt", "indent": 0, "text": ["Author"], "extent": [1441, 1449], "body": [{"type": "para", "indent": 4, "text": ["This is the basis for the ", {"type": "q", "text": ["namespace"]}, " part of the name."], "extent": [1466, 1527]}, {"type": "para", "indent": 4, "text": ["In a studio environment, you may want add a ", {"scheme": null, "value": "namespaces", "type": "link", "text": ["namespace"], "fullpath": "/ref/windows/namespaces.html"}, " to ensure your node names don\u2019t collide with Houdini\u2019s node names or node names from other vendors.  The ", {"type": "ui", "text": ["Author"]}, " field (where the ", {"type": "q", "text": ["author"]}, " can be a user name or studio name) is the basis for the namespace."], "extent": [1527, 1808]}, {"type": "para", "indent": 4, "text": ["If you turn off the checkbox next to ", {"type": "ui", "text": ["Author"]}, ", the dialog will not add a namespace at all."], "extent": [1808, 1906]}], "container": true, "attrs": {"id": "author"}}, {"type": "dt", "indent": 0, "text": ["Branch"], "extent": [1906, 1914], "body": [{"type": "para", "indent": 4, "text": ["This adds some extra text to the namespace, marking what part of the development cycle the node is in. If you turn off the checkbox next to ", {"type": "ui", "text": ["Branch"]}, ", the dialog will not add a branch to the namespace string."], "extent": [1931, 2146]}, {"type": "para", "indent": 4, "text": ["Some people may find useful, especially in large studios with shared asset libraries. It can help distinguish versions of the same asset in different phases, so for example artists can ensure they're using the ", {"type": "q", "text": ["main"]}, " version of an asset, while TDs are working on a ", {"type": "q", "text": ["dev"]}, " version."], "extent": [2146, 2431]}, {"type": "para", "indent": 4, "text": ["The drop-down menu to the right of the ", {"type": "ui", "text": ["Branch"]}, " field has some suggested values, for example ", {"type": "q", "text": ["dev"]}, " (in development), ", {"type": "q", "text": ["test"]}, " (limited release for testing), ", {"type": "q", "text": ["main"]}, " (tested mainline version)."], "extent": [2431, 2627]}], "container": true, "attrs": {"id": "branch"}}, {"type": "dt", "indent": 0, "text": ["Version"], "extent": [2627, 2636], "body": [{"type": "para", "indent": 4, "text": ["This adds a ", {"scheme": null, "value": "/assets/namespaces", "type": "link", "text": ["version number"], "fullpath": "/assets/namespaces.html"}, " part to the name, for example ", {"type": "code", "text": ["threelightrig::2.0"]}, "."], "extent": [2654, 2759]}, {"type": "para", "indent": 4, "text": ["If you turn off the checkbox next to ", {"type": "ui", "text": ["Version"]}, ", the dialog will not add a version to the name. (An ", {"type": "q", "text": ["empty"]}, " version is considered the earliest version when Houdini decides which is the latest version.) It\u2019s up to you whether you want to start your assets with a version like ", {"type": "code", "text": ["1.0"]}, ", or no version."], "extent": [2759, 3062]}, {"type": "para", "indent": 4, "text": ["The version number lets you have multiple versions of an asset with the same name loaded at the same time, so scene files with older versions of an asset still work. Houdini ensures that the Tab menu puts down the latest version (by default)."], "extent": [3062, 3310]}], "container": true, "attrs": {"id": "version"}}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tab Menu"], "extent": [3310, 3325], "body": [{"type": "para", "indent": 0, "text": ["These options control how the new asset appears in the ", {"scheme": null, "value": "/basics/tabmenu", "type": "link", "text": ["Tab menu"], "fullpath": "/basics/tabmenu.html"}, ": the submenu it appears in, and its displayed label."], "extent": [3325, 3462]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [3462, 3467], "body": [{"type": "para", "indent": 4, "text": ["We strongly recommend you make sure an asset\u2019s internal name and Label match (for example, ", {"type": "code", "text": ["threelightrig"]}, " and ", {"type": "code", "text": ["Three Light Rig"]}, "), to avoid confusion."], "extent": [3467, 3623]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Menu Entry"], "extent": [3623, 3635], "body": [{"type": "para", "indent": 4, "text": ["This specifies which sub-menu the asset will appear in when browsing the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu. You can choose an existing submenu using the dropdown menu to the right of the text box. Or, you can type a new sub-menu label to create a new sub-menu. For example, you could group all your own custom nodes into their own submenu in the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu."], "extent": [3655, 3999]}, {"type": "para", "indent": 4, "text": ["You can add a slash (", {"type": "code", "text": ["/"]}, ") to the name to created nested sub-menus. For example, ", {"type": "code", "text": ["My Nodes/Polygons"]}, ". However, we generally recommend against this since it can be hard for users to select through multiple levels of sub-menus off the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu."], "extent": [3999, 4250]}], "container": true, "attrs": {"id": "menuentry"}}, {"type": "dt", "indent": 0, "text": ["Asset Label"], "extent": [4250, 4263], "body": [{"type": "para", "indent": 4, "text": ["This is the human-readable label for the asset. That is, how the asset appears in the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu."], "extent": [4284, 4389]}, {"type": "para", "indent": 4, "text": ["If you set the popup menu to ", {"type": "ui", "text": ["Explicit"]}, ", you can type your own label string in the text field below. If you set the popup menu to ", {"type": "ui", "text": ["Constructed"]}, ", the dialog automatically builds a label from the internal name."], "extent": [4389, 4607]}], "container": true, "attrs": {"id": "assetlabel"}}, {"type": "dt", "indent": 0, "text": ["Display Branch in Label"], "extent": [4607, 4632], "body": [{"type": "para", "indent": 4, "text": ["If you are using the ", {"type": "ui", "text": ["Branch"]}, " feature, and this is on, the dialog will add the branch to the label (for example, ", {"type": "code", "text": ["Three Light Rig (Main)"]}, "). This will make it easier for users to tell which branch of an asset they have, since it will appear as part of the label in the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu."], "extent": [4656, 4946]}], "container": true, "attrs": {"id": "branchinlabel"}}], "container": true}]}, {"level": 2, "id": "saveto", "container": true, "type": "h", "indent": 0, "text": ["Save To"], "extent": [4946, 4969], "body": [{"type": "para", "indent": 0, "text": ["These options control the library file the asset is saved into (the parent directory and the library file name)."], "extent": [4969, 5084]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5084, 5090], "body": [{"type": "para", "indent": 4, "text": ["Remember that asset library files can store multiple assets. If you specify an existing library file as the destination for a new asset, it adds the asset to the existing file (it doesn\u2019t overwrite the file with ", {"type": "strong", "text": ["only"]}, " the new asset)."], "extent": [5090, 5330]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Library Path"], "extent": [5330, 5344], "body": [{"type": "para", "indent": 4, "text": ["Choose the parent directory in containg the library file to save into."], "extent": [5366, 5442]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["User Preferences Directory"], "extent": [5442, 5474], "body": [{"type": "para", "indent": 8, "text": ["Save the asset in your personal prefs directory. This makes the asset available across projects, but only to you."], "extent": [5474, 5597]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hip File Directory"], "extent": [5597, 5621], "body": [{"type": "para", "indent": 8, "text": ["Save the asset in an ", {"type": "code", "text": ["hda"]}, " subdirectory next to the current scene file. This makes the asset available to the current ", {"type": "q", "text": ["project"]}, ": the current scene file and any other scene files in the same directory."], "extent": [5621, 5831]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Site-specific Directory"], "extent": [5831, 5860], "body": [{"type": "para", "indent": 8, "text": ["Save the asset into your site (studio) shared ", {"type": "code", "text": ["hda"]}, " directory. This only works if someone (you, the studio\u2019s IT department, or someone else) has set up ", {"type": "code", "text": ["$HSITE"]}, " environment variable to point to a site-wide network share."], "extent": [5860, 6090]}], "container": true}, {"type": "dt", "indent": 4, "text": ["From Preferences"], "extent": [6090, 6112], "body": [{"type": "para", "indent": 8, "text": ["You can set up a commonly used directory in the ", {"scheme": null, "value": "/ref/windows/save_asset_preferences", "type": "link", "text": ["Save Asset Preferences"], "fullpath": "/ref/windows/save_asset_preferences.html"}, " dialog, and then choose this item to use it."], "extent": [6112, 6275]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Embedded in .hip File"], "extent": [6275, 6302], "body": [{"type": "para", "indent": 8, "text": ["Embeds the asset definition as part of the current scene file. This makes the asset only available in this scene file. This can be useful when testing an asset."], "extent": [6302, 6472]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [6472, 6484], "body": [{"type": "para", "indent": 8, "text": ["Enter a custom directory path by hand."], "extent": [6484, 6532]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "librarypath"}}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [6532, 6538], "body": [{"type": "para", "indent": 4, "text": ["Some of these save locations (", {"type": "code", "text": ["$HIP/hda"]}, ", ", {"type": "code", "text": ["$HSITE/hda"]}, ", often the custom values) are not scanned for assets by default. If you save to these locations, the asset will automatically be installed in ", {"type": "em", "text": ["this scene file"]}, ", but you will need to manually install the assets when you want to use them in other scene files. Or, you can add the directories to the ", {"type": "code", "text": ["$HOUDINI_OTLSCAN_PATH"]}, " so Houdini does automatically scan them for assets."], "extent": [6538, 6971]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Library Name"], "extent": [6971, 6985], "body": [{"type": "para", "indent": 4, "text": ["Choose how to build the library filename."], "extent": [7007, 7054]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Everything"], "extent": [7054, 7070], "body": [{"type": "para", "indent": 8, "text": ["Use the namespace, internal name, and version to build the filename. For example, ", {"type": "code", "text": ["matt.dev.threelightrig.2.0.hda"]}, "."], "extent": [7070, 7195]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Type Name"], "extent": [7195, 7210], "body": [{"type": "para", "indent": 8, "text": ["Use the base type name to build the filename. For example, ", {"type": "code", "text": ["threelightrig.hda"]}, "."], "extent": [7210, 7299]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Name"], "extent": [7299, 7314], "body": [{"type": "para", "indent": 8, "text": ["Use the ", {"type": "em", "text": ["name of the node instance you right-clicked to turn into an asset"]}, " to build the filename. If you created the asset from a subnet that had already been given a meaningful name, this might be useful. For example, ", {"type": "code", "text": ["three_light_rig2.hda"]}, "."], "extent": [7314, 7567]}], "container": true}, {"type": "dt", "indent": 4, "text": ["From Preferences"], "extent": [7567, 7589], "body": [{"type": "para", "indent": 8, "text": ["You can set up a template string in the ", {"scheme": null, "value": "/ref/windows/save_asset_preferences", "type": "link", "text": ["Save Asset Preferences"], "fullpath": "/ref/windows/save_asset_preferences.html"}, " dialog, and then choose this item to use it."], "extent": [7589, 7744]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [7744, 7756], "body": [{"type": "para", "indent": 8, "text": ["Enter a custom filename by hand."], "extent": [7756, 7802]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "libraryname"}}, {"type": "dt", "indent": 0, "text": ["Prefix Type Category"], "extent": [7802, 7824], "body": [{"type": "para", "indent": 4, "text": ["This adds the network type to the library filename as a further guard against filename overlap."], "extent": [7845, 7946]}, {"type": "para", "indent": 4, "text": ["If you keep a lot of asset files in the same directory, there\u2019s a possibility you could have two assets of different network types (for example, a geometry asset (SOP) and a Solaris asset (LOP)) with the same name, namespace, and version. If you want to keep assets in separate files, you can turn this on to make sure assets of different network types but with the same internal name are saved into different files."], "extent": [7946, 8369]}], "container": true, "attrs": {"id": "prefixtype"}}], "container": true}]}], "title": ["New Digital Asset dialog"]}