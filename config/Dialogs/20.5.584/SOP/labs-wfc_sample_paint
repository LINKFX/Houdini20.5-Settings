// Magic: e7c3c598
// Automatically generated PSI dialog (PSI version 20.5.584)
// Fri May 30 16:22:54 2025


f_tmp = FLOAT_FIELD;	// dialog.top.ui
stroke_group.gad = NULL { }
displaygroup.gad = NULL { }
attribute.gad = NULL { }
stroke_attrib.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
stroke_attrib.gad = NULL { }
stroke_attribtype.gad = NULL { }
}	// Template join.bot


btnAddInputsToDict.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("btnAddInputsToDict", "Initialize Value Mapping with Input")
	push VALUE(btnAddInputsToDict.val);

    { WIDTH(0.1) }
}

mpPaintObjects.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Objects", "mpPaintObjects") WIDTH(1.5);
    { WIDTH(0.06) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center) VALUE(mpPaintObjects.val) 

	mpPaintObjects.field = PARM_FIELD(integer, "mpPaintObjects") 
		VALUE(mpPaintObjects.val) HSTRETCH(0.5) PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(mpPaintObjects.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(mpPaintObjects.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);
	}

	ACTION_BUTTON "Clear" VALUE(mpPaintObjects.clear.val);
    }

    { HSTRETCH }
}

mpPaintObjects.multiscroll = SCROLLREGION
{
    LAYOUT(vertical) HSTRETCH LOOK(line2) 
	MARGIN(0.05) SCROLLVALUE(mpPaintObjects.scrollx.val, mpPaintObjects.scrolly.val)
}

mpPaintObjects.gad =
{
    LAYOUT(vertical) STRETCH SPACING(0.02)
    HMARGIN(0.18, 0.1)

    mpPaintObjects.parm;
    {
	LAYOUT(horizontal) STRETCH

        mpPaintObjects.multiscroll;

	SCROLLBAR VALUE(mpPaintObjects.scrolly.val) 
	    LAYOUT(vertical) WIDTH(0.1) HSTRETCH;
    }
}

reset.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("reset", "Reset All Changes")
	push VALUE(reset.val);

    { WIDTH(0.1) }
}

fgint.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fgint.label = PARM_LABEL("Value to Draw", "fgint") WIDTH(1.5);
 PARM(integer, 1, "fgint", none, none) RANGE(0,10)
	 LABELREF(fgint.label) HSTRETCH;

  { WIDTH(0.1) }
}
lmboperation.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
lmboperation.gad = NULL { }
lmboperation2.gad = NULL { }
lmboperation3.gad = NULL { }
}	// Template join.bot

mmboperation.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
mmboperation.gad = NULL { }
mmboperation2.gad = NULL { }
mmboperation3.gad = NULL { }
}	// Template join.bot

stroke_operation.gad = NULL { }
stroke_paintmode.gad = NULL { }
stroke_shape.gad = NULL { }
fgcolor.gad = NULL { }
bgcolor.gad = NULL { }
fgfloat.gad = NULL { }
bgfloat.gad = NULL { }
bgint.gad = NULL { }
stroke_radius.gad = NULL { }
stroke_screensize.gad = NULL { }
stroke_opacity.gad = NULL { }
stroke_softedge.gad = NULL { }
stroke_connectivity.gad = NULL { }
stroke_frontface.gad = NULL { }
stroke_visibility.gad = NULL { }
visibilitybias.gad = NULL { }
stroke_opacitypressure.gad = NULL { }
stroke_radiuspressure.gad = NULL { }
stroke_tool.gad = NULL { }
stroke_color.gad = NULL { }
stroke_projtype.gad = NULL { }
stroke_projcenter.gad = NULL { }
stroke_float.gad = NULL { }
stroke_int.gad = NULL { }

stroke_numstrokes.parm =
{
    LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Number of Strokes", "stroke_numstrokes") WIDTH(1.5);
    { WIDTH(0.1) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center) VALUE(stroke_numstrokes.val)

	stroke_numstrokes.field = PARM_FIELD(integer, "stroke_numstrokes") 
		VALUE(stroke_numstrokes.val) HSTRETCH(0.5) PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(stroke_numstrokes.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(stroke_numstrokes.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);
	}
	ACTION_BUTTON "Clear" VALUE(stroke_numstrokes.clear.val);
    }

    { HSTRETCH }
}

stroke_numstrokes.multiswitch =
{
    LAYOUT(vertical) STRETCH
}

stroke_numstrokes.gad =
{
    LAYOUT(vertical) STRETCH HMARGIN(0.18, 0.1)
        NO_MARGIN_SPACING_SCALE

    stroke_numstrokes.parm;
    stroke_numstrokes.multiswitch;
}

numattribs.parm =
{
    LAYOUT(horizontal) SPACING(0.02) HSTRETCH

    PARM_LABEL_SIMPLE("Attributes", "numattribs") WIDTH(1.5);
    { WIDTH(0.1) }

    numattribs.field = PARM_FIELD (integer, "numattribs") 
			VALUE(numattribs.val) HSTRETCH;

    ACTION_BUTTON "More" SENDS(1) VALUE(numattribs.more.val);
    ACTION_BUTTON "Less" SENDS(1) VALUE(numattribs.less.val);
    ACTION_BUTTON "Clear" SENDS(1) VALUE(numattribs.clear.val);
}

numattribs.multilist = 
{
    LAYOUT(vertical) HSTRETCH
}

numattribs.gad =
{
    LAYOUT(vertical) HSTRETCH SPACING(0.02)

    numattribs.multilist;
}
domirror.gad = NULL { }
mirror_t.gad = NULL { }
mirror_dir.gad = NULL { }
recachemethod.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
recachemethod.gad = NULL { }
recache.gad = NULL { }
}	// Template join.bot

savecache.gad = NULL { }
livemode.gad = NULL { }
docaching.gad = NULL { }
strokegeo.gad = NULL { }
isectgeo.gad = NULL { }
activestrokegeo.gad = NULL { }
bakedgeo.gad = NULL { }
unsavedbakedgeo.gad = NULL { }
erasestrokes.gad = NULL { }

folder0_1_1.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder0_1_1.gad"
    { 
	VALUE(folder0_1_1.gad.val) STRETCH(1,0)
    } 
}

folder0_1.gad = 

GROUP simple "Brush" flat 
{ 
    VALUE(folder0_1.gad.val) LAYOUT(vertical) HSTRETCH 
	    reset.gad;		
	    fgint.gad;		
	    lmboperation.row.join;		
	    mmboperation.row.join;		
	    stroke_operation.gad;		
	    stroke_paintmode.gad;		
	    stroke_shape.gad;		
	    fgcolor.gad;		
	    bgcolor.gad;		
	    fgfloat.gad;		
	    bgfloat.gad;		
	    bgint.gad;		
	    stroke_radius.gad;		
	    stroke_screensize.gad;		
	    stroke_opacity.gad;		
	    stroke_softedge.gad;		
	    stroke_connectivity.gad;		
	    stroke_frontface.gad;		
	    stroke_visibility.gad;		
	    visibilitybias.gad;		
	    stroke_opacitypressure.gad;		
	    stroke_radiuspressure.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    stroke_group.gad; 
    displaygroup.gad; 
    attribute.gad; 
    stroke_attrib.row.join; 
    btnAddInputsToDict.gad; 
    mpPaintObjects.gad; 
    folder0_1.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
